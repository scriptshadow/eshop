name: Build & Release

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  build-and-release:
    name: Build & Release
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java  (si besoin pour ton projet)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '12.x'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test --coverage

      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      - name: Build iOS IPA
        run: |
          flutter build ipa --no-codesign
          cd build/ios/ipa
          # si ton .ipa est générique dans build/ios/ipa/*.ipa, pas besoin de retravailler le zip

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          # paths séparés par un saut de ligne ou une virgule
          artifacts: |
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/ios/ipa/*.ipa
          # tu peux générer un tag automatique ou reprendre la version Flutter
          tag: v${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}
